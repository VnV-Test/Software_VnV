on: push
name: Slack Notification Demo

jobs:
  junitTest:
    name: junit test & slack notification
    runs-on: ubuntu-latest
    steps:
   
    - uses: actions/checkout@v2
    
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
#     - name: Install NDK
#       run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;20.0.5594570"
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Test JUnit test import
      uses: ./
      if: endsWith(github.ref, 'main') == false
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        check_name: Example JUnit Test Report
        report_paths: './results.xml'
        summary: '<table><thead><tr><th> Application (src/applications) </th></tr></thead><tbody><tr><td> test </td></tr></tbody></table>'
        
#     - name: notify-tests
#       uses: ivanklee86/xunit-slack-reporter@v1.0.1
#       env:
#         EXIT_CODE_FROM_REPORT: "True"
#         SLACK_CHANNEL: github_action
#         SLACK_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#         XUNIT_PATH: ./results.xml
        
#     - name: Slack Notification
#       uses: rtCamp/action-slack-notify@v2
#       env:
#         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        
    - name: Notify slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: github_action
        status: SUCCESS
        color: good

    - name: Notify slack fail
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: github_action
        status: FAILED
        color: danger
  
  
#   staticAnalysis:
#     name: static Analysis & Slack Notification
#     runs-on: ubuntu-latest
#     steps:
   
#     - uses: actions/checkout@v2
    
#     - name: set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
        
#     - name: Cache Gradle packages
#       uses: actions/cache@v2
#       with:
#         path: |
#           ~/.gradle/caches
#           ~/.gradle/wrapper
#         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#         restore-keys: |
#           ${{ runner.os }}-gradle-
    
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
      
#     - name: Build with Gradle
#       run: ./gradlew build
    
#     - name: Slack Notification
#       uses: rtCamp/action-slack-notify@v2
#       env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
